{"version":3,"file":"static/js/379.c235b4db.chunk.js","mappings":"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","sources":["containers/FC/displayContainer.jsx","containers/FC/keypadContainer.jsx","containers/FC/historyContainer.jsx","containers/FC/controlPanelContainer.jsx","components/calculator-FC/index.jsx","containers/FC/calculatorContainer.jsx","pages/homeFCPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\"\r\n\r\nimport Display from \"@components/display\"\r\n\r\nfunction DisplayContainer() {\r\n  const expression = useSelector((state) => state?.expression)\r\n  const result = useSelector((state) => state?.result)\r\n  const previousExpression = useSelector((state) => state?.previousExpression)\r\n\r\n  return <Display expression={expression} result={result} previousExpression={previousExpression} />\r\n}\r\n\r\nexport default DisplayContainer\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { useState, useMemo, useEffect, memo } from \"react\"\r\n\r\nimport Keypad from \"@components/keypad\"\r\nimport { calctulateExpression } from \"@utils/calculator\"\r\nimport {\r\n  validateExpression,\r\n  temporaryExpresssionArray,\r\n  checkExpressionForOperators,\r\n} from \"@helpers/calculatorHelpers\"\r\nimport { addHistory, addExpression, setResult, setPreviousExpression } from \"@actions\"\r\nimport { containsOperator } from \"@helpers/calculatorHelpers\"\r\n\r\nfunction KeypadContainer() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [calculate, setCalculate] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const expression = useSelector((state) => state?.expression)\r\n  const result = useSelector((state) => state?.result)\r\n  const previousExpression = useSelector((state) => state.previousExpression)\r\n\r\n  const memoizedExpr = useMemo(() => {\r\n    if (previousExpression && expression) {\r\n      try {\r\n        return calctulateExpression(previousExpression)\r\n      } catch (e) {\r\n        setError(e.message)\r\n        setCalculate(false)\r\n        return e.message\r\n      }\r\n    }\r\n    return expression\r\n  }, [previousExpression])\r\n\r\n  const handleClick = (e) => {\r\n    switch (e.target.value) {\r\n      case \"C\":\r\n        result.length !== 0 && dispatch(setResult(\"\"))\r\n        temporaryExpresssionArray.length = 0\r\n        dispatch(setResult(\"0\"))\r\n        dispatch(addExpression(\"\"))\r\n        break\r\n      case \"CE\":\r\n        result.length !== 0 && dispatch(setResult(\"0\"))\r\n        if (expression[expression.length - 1] === \".\" || expression.length !== 1) {\r\n          dispatch(addExpression(expression.slice(0, -1)))\r\n        } else if (expression.length === 1 && expression[expression.length - 1] !== \"0\") {\r\n          dispatch(addExpression(\"0\"))\r\n        }\r\n        temporaryExpresssionArray.pop()\r\n        break\r\n      case \"=\":\r\n        if (\r\n          checkExpressionForOperators(expression) &&\r\n          !containsOperator(expression[expression.length - 1])\r\n        ) {\r\n          try {\r\n            temporaryExpresssionArray.length = 0\r\n            dispatch(setPreviousExpression(expression))\r\n            setCalculate(true)\r\n            break\r\n          } catch (e) {\r\n            dispatch(addExpression(e.message))\r\n          }\r\n        }\r\n        break\r\n      default:\r\n        result?.length !== 0 && dispatch(setResult(\"0\"))\r\n        if (!expression.includes(\"Error\")) {\r\n          validateExpression(e.target.value, expression, dispatch)\r\n        } else {\r\n          validateExpression(e.target.value, \"\", dispatch)\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (previousExpression && error === null && expression) {\r\n      dispatch(setResult(memoizedExpr))\r\n      dispatch(addHistory(expression))\r\n      dispatch(addExpression(\"\"))\r\n      setCalculate(false)\r\n    }\r\n  }, [calculate])\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(addHistory(previousExpression));\r\n      dispatch(addExpression(error))\r\n      setError(null)\r\n    }\r\n  }, [error])\r\n\r\n  return <Keypad handleClick={handleClick} />\r\n}\r\n\r\nexport default memo(KeypadContainer)\r\n","import { useSelector } from \"react-redux\"\r\n\r\nimport History from \"@components/history\"\r\n\r\nfunction HistoryContainer() {\r\n  const history = useSelector((state) => state?.history)\r\n\r\n  return <History history={history} />\r\n}\r\n\r\nexport default HistoryContainer\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport ControlPanel from \"@components/control-panel\"\r\nimport { setHistoryVisability } from \"@actions\"\r\n\r\nfunction ControlPanelContainer() {\r\n  const dispatch = useDispatch()\r\n  const historyVisability = useSelector((state) => state.historyVisability)\r\n  const hideHistoryClick = () => {\r\n    dispatch(setHistoryVisability(!historyVisability))\r\n  }\r\n\r\n  return <ControlPanel hideHistoryClick={hideHistoryClick} />\r\n}\r\nexport default ControlPanelContainer\r\n","import PropTypes from \"prop-types\"\r\nimport {\r\n  StyledCalculatorContainer,\r\n  StyledCalculatorDisplayContainer,\r\n  StyledHistoryContainer,\r\n} from \"./styled\"\r\nimport DisplayContainer from \"@containers/FC/displayContainer\"\r\nimport KeypadContainer from \"@containers/FC/keypadContainer\"\r\nimport HistoryContainer from \"@containers/FC/historyContainer\"\r\nimport ControlPanelContainer from \"@containers/FC/controlPanelContainer\"\r\n\r\nfunction Calculator(props) {\r\n  const { isHidden } = props\r\n\r\n  return (\r\n    <StyledCalculatorContainer>\r\n      <StyledCalculatorDisplayContainer>\r\n        <DisplayContainer />\r\n        <KeypadContainer />\r\n      </StyledCalculatorDisplayContainer>\r\n      <ControlPanelContainer />\r\n      <StyledHistoryContainer isHidden={isHidden} data-cypress=\"historyContainer\">\r\n        <HistoryContainer />\r\n      </StyledHistoryContainer>\r\n    </StyledCalculatorContainer>\r\n  )\r\n}\r\nCalculator.propTypes = {\r\n  isHidden: PropTypes.bool,\r\n}\r\nexport default Calculator\r\n","import { useSelector } from \"react-redux\"\r\n\r\nimport Calculator from \"@components/calculator-FC\"\r\n\r\nfunction CalculatorContainer() {\r\n  const historyVisability = useSelector((state) => state.historyVisability)\r\n\r\n  return <Calculator isHidden={historyVisability} />\r\n}\r\n\r\nexport default CalculatorContainer\r\n","import ErrorBoundary from \"@components/error-boundary\"\r\nimport CalculatorContainer from \"@containers/FC/calculatorContainer\"\r\n\r\nconst HomeFCPAGE = () => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <CalculatorContainer />\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport default HomeFCPAGE\r\n"],"names":["expression","useSelector","state","result","previousExpression","KeypadContainer","dispatch","useDispatch","useState","calculate","setCalculate","error","setError","memoizedExpr","useMemo","calctulateExpression","e","message","useEffect","setResult","addHistory","addExpression","handleClick","target","value","length","temporaryExpresssionArray","slice","checkExpressionForOperators","containsOperator","setPreviousExpression","includes","validateExpression","memo","history","historyVisability","hideHistoryClick","setHistoryVisability","props","isHidden"],"sourceRoot":""}