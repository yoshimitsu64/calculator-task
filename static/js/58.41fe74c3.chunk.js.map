{"version":3,"file":"static/js/58.41fe74c3.chunk.js","mappings":"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","sources":["components/error-boundary/index.js","components/settings/styled.js","components/switch/index.jsx","containers/FC/switch-container.jsx","components/settings/index.jsx","containers/FC/settings-container.jsx","pages/SettingsPage.jsx","store/actions/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Error</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSettings = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 70px;\r\n  color: ${({theme}) => theme.display};\r\n  font-size: 50px;\r\n`;\r\nexport const StyledSwitchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 40px;\r\n  margin-bottom: 20px;\r\n  color: ${({theme}) => theme.display};\r\n\r\n`;\r\n\r\nexport const StyledCleanHistoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 25%;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  background-color: grey;\r\n  border: none;\r\n  color: white;\r\n  height: 40px;\r\n  font-size: 13px;\r\n  margin-bottom: 10px;\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n","import \"./styles.css\";\r\n\r\nfunction Switch(props) {\r\n  return (\r\n    <label className=\"toggle-switch\">\r\n      <input type=\"checkbox\" onClick={props.handleClick} />\r\n      <span className=\"switch\" />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport Switch from \"@components/switch\";\r\nimport { toogleTheme } from \"@store/actions\";\r\n\r\nfunction SwitchContainer() {\r\n  const dispatch = useDispatch();\r\n  const isDarkTheme = useSelector((state) => state.isDarkTheme);\r\n  const handleClick = () => dispatch(toogleTheme(!isDarkTheme));\r\n\r\n  return <Switch handleClick={handleClick} />;\r\n}\r\n\r\nexport default SwitchContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  StyledButton,\r\n  StyledCleanHistoryContainer,\r\n  StyledSettings,\r\n  StyledSwitchContainer,\r\n} from \"./styled\";\r\nimport SwitchContainer from \"@containers/FC/switch-container\";\r\n\r\nfunction Settings(props) {\r\n  const { cleanHistoryClick, cleanAllClick } = props;\r\n  return (\r\n    <StyledSettings>\r\n      <h1>Settings</h1>\r\n      <StyledSwitchContainer>\r\n        Change theme\r\n        <SwitchContainer />\r\n      </StyledSwitchContainer>\r\n      <StyledCleanHistoryContainer>\r\n        <StyledButton onClick={cleanHistoryClick}>Clean history</StyledButton>\r\n        <StyledButton onClick={cleanAllClick}>Clean all</StyledButton>\r\n      </StyledCleanHistoryContainer>\r\n    </StyledSettings>\r\n  );\r\n}\r\nSettings.propType = {\r\n  cleanHistoryClick: PropTypes.func,\r\n  cleanAllClick: PropTypes.func,\r\n};\r\n\r\nexport default Settings;\r\n","import { useDispatch } from \"react-redux\";\r\nimport Settings from \"@components/settings\";\r\nimport { cleanHistory, addExpression } from \"@store/actions\";\r\n\r\nfunction SettingsContainer() {\r\n  const dispatch = useDispatch();\r\n  const cleanHistoryClick = () => dispatch(cleanHistory());\r\n  const cleanAllClick = () => {\r\n    dispatch(cleanHistory());\r\n    dispatch(addExpression(\"0\"));\r\n  };\r\n  \r\n  return (\r\n    <Settings\r\n      cleanHistoryClick={cleanHistoryClick}\r\n      cleanAllClick={cleanAllClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SettingsContainer;\r\n","import ErrorBoundary from \"@components/error-boundary\";\r\nimport Header from \"@components/header\";\r\nimport Settings from \"@components/settings\";\r\nimport SettingsContainer from \"@containers/FC/settings-container\";\r\n\r\nfunction SettingsPage() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <SettingsContainer />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default SettingsPage;\r\n","export function addHistory(payload) {\r\n  return {\r\n    type: \"ADD_HISTORY\",\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function addExpression(payload) {\r\n  return {\r\n    type: \"ADD_EXPRESSION\",\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function setHistoryVisability(payload) {\r\n  return {\r\n    type: \"SET_HISTORY_VISABILITY\",\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport function cleanHistory() {\r\n  return {\r\n    type: \"CLEAN_HISTORY\",\r\n  };\r\n}\r\n\r\nexport function toogleTheme(payload) {\r\n  return {\r\n    type: \"TOOGLE_THEME\",\r\n    payload: payload,\r\n  };\r\n}\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ErrorBoundary","state","hasError","this","props","children","error","Component","StyledSettings","styled","theme","display","StyledSwitchContainer","StyledCleanHistoryContainer","StyledButton","className","type","onClick","handleClick","dispatch","useDispatch","isDarkTheme","useSelector","toogleTheme","Settings","cleanHistoryClick","cleanAllClick","propType","PropTypes","cleanHistory","addExpression","addHistory","payload","setHistoryVisability","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}